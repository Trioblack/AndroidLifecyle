{"name":"AndroidLifecyle","tagline":"A 'compatibility' version of the ActivityLifecycleCallbacks APIs that were introduced in Android 4 (API Level 14) and adding similar mechanism for Fragment.","body":"Android Lifecycle\r\n=============\r\n\r\nA 'compatibility' version of the ActivityLifecycleCallbacks APIs (http://developer.android.com/reference/android/app/Application.ActivityLifecycleCallbacks.html)\r\nthat were introduced in Android 4 (API Level 14) and adding similar mechanism for Fragment.\r\n\r\nWhy & When you need this\r\n=============\r\n\r\nThe reason google introduced ActivityLifecycleCallbacks APIs in Android 4 is try to simplify and modularize the code which need to \"inject\" to Activity's lifecycle.\r\n\r\nFor instance the Google Analytics service requires call a specific method in onStart and onStop of all activities, another good example is ViewServer enable developer inspect UI hierarchy in an un-rooted device.\r\n\r\nFurther more, you might expect those code could be plug-in or out in your building, and this library can make it easier for you.\r\n\r\nMore info about ActivityLifecycleCallbacks APIs, please check android documents.\r\n\r\nSince fragment play more and more important role in android UI development(One Activity + fragments), you would need similar tools to simplify your fragment development.\r\n\r\nHow to use\r\n=============\r\n\r\n- You can grab the jar from Maven Central Repository and put it to your libs dictionary\r\n- Maven\r\n```xml\r\n<dependency>\r\n  <groupId>com.cocosw</groupId>\r\n  <artifactId>lifecycle</artifactId>\r\n  <version>0.1</version>\r\n</dependency>\r\n```\r\n- Gradle\r\n```xml\r\ncompile 'com.cocosw:lifecycle:0.1'\r\n```\r\n\r\nAPI\r\n============\r\n\r\n- Have all your activities extend one of the base activities in the `com.cocosw.lifecycle.app` package.\r\n\r\n- Create your activity/fragment lifecycle callbacks class extend from `ActivityLifecycleCallbacksCompat` and `FragmentLifecycleCallbacks`\r\n\r\n- Call `LifecycleDispatcher.registerActivityLifecycleCallbacks(this, callback)` and/or `LifecycleDispatcher.registerFragmentLifecycleCallbacks(this, callback)`.\r\n\r\n\r\nFor Android 4.0\r\n============\r\n\r\n- This library will use build-in activity lifecycle mechanism for API >14 target platform.\r\n- If you decide to drop 2.x support and move to android activity lifecycle API, you could done that by modify few lines, because the API is basically the same as the official one.\r\n\r\n\r\nActionBarSherlock or AppCompact\r\n============\r\n\r\nIf you use a library that already requires your activities to extend a base class, you can simply create your own base activity.\r\n\r\nLicence\r\n============\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}